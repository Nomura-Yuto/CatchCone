//=============================================================================
//
// 体力処理 [health.cpp]
// Author : 
//
//=============================================================================
#include "health.h"
#include "texture.h"
#include "sprite.h"
#include "sound.h"


//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_WIDTH				(128)	// キャラサイズ
#define TEXTURE_HEIGHT				(128)	// 


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static bool						g_Use;						// true:使っている  false:未使用
static float					g_w, g_h;					// 幅と高さ
static D3DXVECTOR3				g_Pos;						// ポリゴンの座標
static int						g_TexNo;					// テクスチャ番号
static int g_SENo = 0;

static int						g_Health;					// 体力

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitHealth(void)
{
	g_SENo = LoadSound((char*)"data/SE/hit000.wav");

	//テクスチャ生成
	g_TexNo = LoadTexture((char*)"data/TEXTURE/heart.png");

	//初期化
	g_Use   = true;
	g_w     = TEXTURE_WIDTH;
	g_h     = TEXTURE_HEIGHT;
	g_Pos   = D3DXVECTOR3(80.0f, 60.0f, 0.0f);

	g_Health = HEALTH_MAX;	// 体力の初期化

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitHealth(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateHealth(void)
{

}

//=============================================================================
// 描画処理
//=============================================================================
void DrawHealth(void)
{
	//有効化フラグがONなら描画する
	if (g_Use)
	{
		// テクスチャ設定
		GetDeviceContext()->PSSetShaderResources(0, 1, GetTexture(g_TexNo));

		// 桁数分処理する
		for (int i = 0; i < g_Health; i++)
		{
			// 体力の位置やテクスチャー座標を反映
			float px = g_Pos.x + g_w * i;	// 表示位置X
			float py = g_Pos.y;				// 表示位置Y
			float pw = g_w;					// 表示幅
			float ph = g_h;					// 表示高さ

			float tw = 1.0f / 1;		// テクスチャの幅
			float th = 1.0f / 1;		// テクスチャの高さ
			float tx = 0.0f;			// テクスチャの左上X座標
			float ty = 0.0f;			// テクスチャの左上Y座標

			// １枚のポリゴンの頂点とテクスチャ座標を設定
			DrawSprite(g_TexNo, px, py, pw, ph, tx, ty, tw, th);
		}
	}
}

//=============================================================================
// 体力を減少させる
//=============================================================================
void DamageHealth(void)
{
	SetVolume(g_SENo, 0.5f);
	PlaySound(g_SENo, 0);

	g_Health--;

	if (g_Health < 1)
	{
		g_Health = 0;
	}
}


//=============================================================================
// 生きているかの判定
//=============================================================================
bool isAlive(void)
{
	if (g_Health <= 0) return true;
	return false;
}
